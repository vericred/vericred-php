<?php
/**
 * PlanSearchResult
 *
 * PHP version 5
 *
 * @category Class
 * @package  Vericred\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * PlanSearchResult Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Vericred\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PlanSearchResult implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    static $swaggerModelName = 'PlanSearchResult';

    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'adult_dental' => 'bool',
        'ambulance' => 'string',
        'benefits_summary_url' => 'string',
        'buy_link' => 'string',
        'carrier_name' => 'string',
        'child_dental' => 'bool',
        'child_eyewear' => 'string',
        'customer_service_phone_number' => 'string',
        'durable_medical_equipment' => 'string',
        'diagnostic_test' => 'string',
        'drug_formulary_url' => 'string',
        'emergency_room' => 'string',
        'family_drug_deductible' => 'string',
        'family_drug_moop' => 'string',
        'family_medical_deductible' => 'string',
        'family_medical_moop' => 'string',
        'generic_drugs' => 'string',
        'hios_issuer_id' => 'string',
        'id' => 'string',
        'imaging' => 'string',
        'individual_drug_deductible' => 'string',
        'individual_drug_moop' => 'string',
        'individual_medical_deductible' => 'string',
        'individual_medical_moop' => 'string',
        'inpatient_facility' => 'string',
        'inpatient_physician' => 'string',
        'level' => 'string',
        'logo_url' => 'string',
        'name' => 'string',
        'non_preferred_brand_drugs' => 'string',
        'on_market' => 'bool',
        'off_market' => 'bool',
        'out_of_network_coverage' => 'bool',
        'outpatient_facility' => 'string',
        'outpatient_mental_health' => 'string',
        'outpatient_physician' => 'string',
        'plan_market' => 'string',
        'plan_type' => 'string',
        'preferred_brand_drugs' => 'string',
        'preventative_care' => 'string',
        'primary_care_physician' => 'string',
        'rehabilitation_services' => 'string',
        'specialist' => 'string',
        'specialty_drugs' => 'string',
        'urgent_care' => 'string',
        'match_percentage' => 'int',
        'perfect_match_percentage' => 'int'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'adult_dental' => 'adult_dental',
        'ambulance' => 'ambulance',
        'benefits_summary_url' => 'benefits_summary_url',
        'buy_link' => 'buy_link',
        'carrier_name' => 'carrier_name',
        'child_dental' => 'child_dental',
        'child_eyewear' => 'child_eyewear',
        'customer_service_phone_number' => 'customer_service_phone_number',
        'durable_medical_equipment' => 'durable_medical_equipment',
        'diagnostic_test' => 'diagnostic_test',
        'drug_formulary_url' => 'drug_formulary_url',
        'emergency_room' => 'emergency_room',
        'family_drug_deductible' => 'family_drug_deductible',
        'family_drug_moop' => 'family_drug_moop',
        'family_medical_deductible' => 'family_medical_deductible',
        'family_medical_moop' => 'family_medical_moop',
        'generic_drugs' => 'generic_drugs',
        'hios_issuer_id' => 'hios_issuer_id',
        'id' => 'id',
        'imaging' => 'imaging',
        'individual_drug_deductible' => 'individual_drug_deductible',
        'individual_drug_moop' => 'individual_drug_moop',
        'individual_medical_deductible' => 'individual_medical_deductible',
        'individual_medical_moop' => 'individual_medical_moop',
        'inpatient_facility' => 'inpatient_facility',
        'inpatient_physician' => 'inpatient_physician',
        'level' => 'level',
        'logo_url' => 'logo_url',
        'name' => 'name',
        'non_preferred_brand_drugs' => 'non_preferred_brand_drugs',
        'on_market' => 'on_market',
        'off_market' => 'off_market',
        'out_of_network_coverage' => 'out_of_network_coverage',
        'outpatient_facility' => 'outpatient_facility',
        'outpatient_mental_health' => 'outpatient_mental_health',
        'outpatient_physician' => 'outpatient_physician',
        'plan_market' => 'plan_market',
        'plan_type' => 'plan_type',
        'preferred_brand_drugs' => 'preferred_brand_drugs',
        'preventative_care' => 'preventative_care',
        'primary_care_physician' => 'primary_care_physician',
        'rehabilitation_services' => 'rehabilitation_services',
        'specialist' => 'specialist',
        'specialty_drugs' => 'specialty_drugs',
        'urgent_care' => 'urgent_care',
        'match_percentage' => 'match_percentage',
        'perfect_match_percentage' => 'perfect_match_percentage'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'adult_dental' => 'setAdultDental',
        'ambulance' => 'setAmbulance',
        'benefits_summary_url' => 'setBenefitsSummaryUrl',
        'buy_link' => 'setBuyLink',
        'carrier_name' => 'setCarrierName',
        'child_dental' => 'setChildDental',
        'child_eyewear' => 'setChildEyewear',
        'customer_service_phone_number' => 'setCustomerServicePhoneNumber',
        'durable_medical_equipment' => 'setDurableMedicalEquipment',
        'diagnostic_test' => 'setDiagnosticTest',
        'drug_formulary_url' => 'setDrugFormularyUrl',
        'emergency_room' => 'setEmergencyRoom',
        'family_drug_deductible' => 'setFamilyDrugDeductible',
        'family_drug_moop' => 'setFamilyDrugMoop',
        'family_medical_deductible' => 'setFamilyMedicalDeductible',
        'family_medical_moop' => 'setFamilyMedicalMoop',
        'generic_drugs' => 'setGenericDrugs',
        'hios_issuer_id' => 'setHiosIssuerId',
        'id' => 'setId',
        'imaging' => 'setImaging',
        'individual_drug_deductible' => 'setIndividualDrugDeductible',
        'individual_drug_moop' => 'setIndividualDrugMoop',
        'individual_medical_deductible' => 'setIndividualMedicalDeductible',
        'individual_medical_moop' => 'setIndividualMedicalMoop',
        'inpatient_facility' => 'setInpatientFacility',
        'inpatient_physician' => 'setInpatientPhysician',
        'level' => 'setLevel',
        'logo_url' => 'setLogoUrl',
        'name' => 'setName',
        'non_preferred_brand_drugs' => 'setNonPreferredBrandDrugs',
        'on_market' => 'setOnMarket',
        'off_market' => 'setOffMarket',
        'out_of_network_coverage' => 'setOutOfNetworkCoverage',
        'outpatient_facility' => 'setOutpatientFacility',
        'outpatient_mental_health' => 'setOutpatientMentalHealth',
        'outpatient_physician' => 'setOutpatientPhysician',
        'plan_market' => 'setPlanMarket',
        'plan_type' => 'setPlanType',
        'preferred_brand_drugs' => 'setPreferredBrandDrugs',
        'preventative_care' => 'setPreventativeCare',
        'primary_care_physician' => 'setPrimaryCarePhysician',
        'rehabilitation_services' => 'setRehabilitationServices',
        'specialist' => 'setSpecialist',
        'specialty_drugs' => 'setSpecialtyDrugs',
        'urgent_care' => 'setUrgentCare',
        'match_percentage' => 'setMatchPercentage',
        'perfect_match_percentage' => 'setPerfectMatchPercentage'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'adult_dental' => 'getAdultDental',
        'ambulance' => 'getAmbulance',
        'benefits_summary_url' => 'getBenefitsSummaryUrl',
        'buy_link' => 'getBuyLink',
        'carrier_name' => 'getCarrierName',
        'child_dental' => 'getChildDental',
        'child_eyewear' => 'getChildEyewear',
        'customer_service_phone_number' => 'getCustomerServicePhoneNumber',
        'durable_medical_equipment' => 'getDurableMedicalEquipment',
        'diagnostic_test' => 'getDiagnosticTest',
        'drug_formulary_url' => 'getDrugFormularyUrl',
        'emergency_room' => 'getEmergencyRoom',
        'family_drug_deductible' => 'getFamilyDrugDeductible',
        'family_drug_moop' => 'getFamilyDrugMoop',
        'family_medical_deductible' => 'getFamilyMedicalDeductible',
        'family_medical_moop' => 'getFamilyMedicalMoop',
        'generic_drugs' => 'getGenericDrugs',
        'hios_issuer_id' => 'getHiosIssuerId',
        'id' => 'getId',
        'imaging' => 'getImaging',
        'individual_drug_deductible' => 'getIndividualDrugDeductible',
        'individual_drug_moop' => 'getIndividualDrugMoop',
        'individual_medical_deductible' => 'getIndividualMedicalDeductible',
        'individual_medical_moop' => 'getIndividualMedicalMoop',
        'inpatient_facility' => 'getInpatientFacility',
        'inpatient_physician' => 'getInpatientPhysician',
        'level' => 'getLevel',
        'logo_url' => 'getLogoUrl',
        'name' => 'getName',
        'non_preferred_brand_drugs' => 'getNonPreferredBrandDrugs',
        'on_market' => 'getOnMarket',
        'off_market' => 'getOffMarket',
        'out_of_network_coverage' => 'getOutOfNetworkCoverage',
        'outpatient_facility' => 'getOutpatientFacility',
        'outpatient_mental_health' => 'getOutpatientMentalHealth',
        'outpatient_physician' => 'getOutpatientPhysician',
        'plan_market' => 'getPlanMarket',
        'plan_type' => 'getPlanType',
        'preferred_brand_drugs' => 'getPreferredBrandDrugs',
        'preventative_care' => 'getPreventativeCare',
        'primary_care_physician' => 'getPrimaryCarePhysician',
        'rehabilitation_services' => 'getRehabilitationServices',
        'specialist' => 'getSpecialist',
        'specialty_drugs' => 'getSpecialtyDrugs',
        'urgent_care' => 'getUrgentCare',
        'match_percentage' => 'getMatchPercentage',
        'perfect_match_percentage' => 'getPerfectMatchPercentage'
    );
  
    static function getters() {
        return self::$getters;
    }

    /**
      * $adult_dental Does the plan provide dental coverage for adults?
      * @var bool
      */
    protected $adult_dental;
    /**
      * $ambulance Benefits string for ambulance coverage
      * @var string
      */
    protected $ambulance;
    /**
      * $benefits_summary_url Link to the summary of benefits and coverage (SBC) document.
      * @var string
      */
    protected $benefits_summary_url;
    /**
      * $buy_link Link to a location to purchase the plan.
      * @var string
      */
    protected $buy_link;
    /**
      * $carrier_name Name of the insurance carrier
      * @var string
      */
    protected $carrier_name;
    /**
      * $child_dental Does the plan provide dental coverage for children?
      * @var bool
      */
    protected $child_dental;
    /**
      * $child_eyewear Child eyewear benefits summary
      * @var string
      */
    protected $child_eyewear;
    /**
      * $customer_service_phone_number Phone number to contact the insurance carrier
      * @var string
      */
    protected $customer_service_phone_number;
    /**
      * $durable_medical_equipment Benefits summary for durable medical equipment
      * @var string
      */
    protected $durable_medical_equipment;
    /**
      * $diagnostic_test Diagnostic tests benefit summary
      * @var string
      */
    protected $diagnostic_test;
    /**
      * $drug_formulary_url Link to the summary of drug benefits for the plan
      * @var string
      */
    protected $drug_formulary_url;
    /**
      * $emergency_room Description of costs when visiting the ER
      * @var string
      */
    protected $emergency_room;
    /**
      * $family_drug_deductible Deductible for drugs when a family is on the plan.
      * @var string
      */
    protected $family_drug_deductible;
    /**
      * $family_drug_moop Maximum out-of-pocket for drugs when a family is on the plan
      * @var string
      */
    protected $family_drug_moop;
    /**
      * $family_medical_deductible Deductible when a family is on the plan
      * @var string
      */
    protected $family_medical_deductible;
    /**
      * $family_medical_moop Maximum out-of-pocket when a family is on the plan
      * @var string
      */
    protected $family_medical_moop;
    /**
      * $generic_drugs Cost for generic drugs
      * @var string
      */
    protected $generic_drugs;
    /**
      * $hios_issuer_id 
      * @var string
      */
    protected $hios_issuer_id;
    /**
      * $id Government-issued HIOS plan ID
      * @var string
      */
    protected $id;
    /**
      * $imaging Benefits summary for imaging coverage
      * @var string
      */
    protected $imaging;
    /**
      * $individual_drug_deductible Deductible for drugs when an individual is on the plan
      * @var string
      */
    protected $individual_drug_deductible;
    /**
      * $individual_drug_moop Maximum out-of-pocket for drugs when an individual is on the plan
      * @var string
      */
    protected $individual_drug_moop;
    /**
      * $individual_medical_deductible Deductible when an individual is on the plan
      * @var string
      */
    protected $individual_medical_deductible;
    /**
      * $individual_medical_moop Maximum out-of-pocket when an individual is on the plan
      * @var string
      */
    protected $individual_medical_moop;
    /**
      * $inpatient_facility Cost under the plan for an inpatient facility
      * @var string
      */
    protected $inpatient_facility;
    /**
      * $inpatient_physician Cost under the plan for an inpatient physician
      * @var string
      */
    protected $inpatient_physician;
    /**
      * $level Plan metal grouping (e.g. platinum, gold, silver, etc)
      * @var string
      */
    protected $level;
    /**
      * $logo_url Link to a copy of the insurance carrier's logo
      * @var string
      */
    protected $logo_url;
    /**
      * $name Marketing name of the plan
      * @var string
      */
    protected $name;
    /**
      * $non_preferred_brand_drugs Cost under the plan for non-preferred brand drugs
      * @var string
      */
    protected $non_preferred_brand_drugs;
    /**
      * $on_market Is the plan on-market?
      * @var bool
      */
    protected $on_market;
    /**
      * $off_market Is the plan off-market?
      * @var bool
      */
    protected $off_market;
    /**
      * $out_of_network_coverage Does this plan provide any out of network coverage?
      * @var bool
      */
    protected $out_of_network_coverage;
    /**
      * $outpatient_facility Benefits summary for outpatient facility coverage
      * @var string
      */
    protected $outpatient_facility;
    /**
      * $outpatient_mental_health Benefits summary for outpatient mental health coverage
      * @var string
      */
    protected $outpatient_mental_health;
    /**
      * $outpatient_physician Benefits summary for outpatient physician coverage
      * @var string
      */
    protected $outpatient_physician;
    /**
      * $plan_market Market in which the plan is offered (on_marketplace, shop, etc)
      * @var string
      */
    protected $plan_market;
    /**
      * $plan_type Category of the plan (e.g. EPO, HMO, PPO, POS, Indemnity)
      * @var string
      */
    protected $plan_type;
    /**
      * $preferred_brand_drugs Cost under the plan for perferred brand drugs
      * @var string
      */
    protected $preferred_brand_drugs;
    /**
      * $preventative_care Benefits summary for preventative care
      * @var string
      */
    protected $preventative_care;
    /**
      * $primary_care_physician Cost under the plan to visit a Primary Care Physician
      * @var string
      */
    protected $primary_care_physician;
    /**
      * $rehabilitation_services Benefits summary for rehabilitation services
      * @var string
      */
    protected $rehabilitation_services;
    /**
      * $specialist Cost under the plan to visit a specialist
      * @var string
      */
    protected $specialist;
    /**
      * $specialty_drugs Cost under the plan for specialty drugs
      * @var string
      */
    protected $specialty_drugs;
    /**
      * $urgent_care Benefits summary for urgent care
      * @var string
      */
    protected $urgent_care;
    /**
      * $match_percentage Percentage of doctors who matched this Plan
      * @var int
      */
    protected $match_percentage;
    /**
      * $perfect_match_percentage Percentage of employees with 100% match
      * @var int
      */
    protected $perfect_match_percentage;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        
        if ($data != null) {
            $this->adult_dental = $data["adult_dental"];
            $this->ambulance = $data["ambulance"];
            $this->benefits_summary_url = $data["benefits_summary_url"];
            $this->buy_link = $data["buy_link"];
            $this->carrier_name = $data["carrier_name"];
            $this->child_dental = $data["child_dental"];
            $this->child_eyewear = $data["child_eyewear"];
            $this->customer_service_phone_number = $data["customer_service_phone_number"];
            $this->durable_medical_equipment = $data["durable_medical_equipment"];
            $this->diagnostic_test = $data["diagnostic_test"];
            $this->drug_formulary_url = $data["drug_formulary_url"];
            $this->emergency_room = $data["emergency_room"];
            $this->family_drug_deductible = $data["family_drug_deductible"];
            $this->family_drug_moop = $data["family_drug_moop"];
            $this->family_medical_deductible = $data["family_medical_deductible"];
            $this->family_medical_moop = $data["family_medical_moop"];
            $this->generic_drugs = $data["generic_drugs"];
            $this->hios_issuer_id = $data["hios_issuer_id"];
            $this->id = $data["id"];
            $this->imaging = $data["imaging"];
            $this->individual_drug_deductible = $data["individual_drug_deductible"];
            $this->individual_drug_moop = $data["individual_drug_moop"];
            $this->individual_medical_deductible = $data["individual_medical_deductible"];
            $this->individual_medical_moop = $data["individual_medical_moop"];
            $this->inpatient_facility = $data["inpatient_facility"];
            $this->inpatient_physician = $data["inpatient_physician"];
            $this->level = $data["level"];
            $this->logo_url = $data["logo_url"];
            $this->name = $data["name"];
            $this->non_preferred_brand_drugs = $data["non_preferred_brand_drugs"];
            $this->on_market = $data["on_market"];
            $this->off_market = $data["off_market"];
            $this->out_of_network_coverage = $data["out_of_network_coverage"];
            $this->outpatient_facility = $data["outpatient_facility"];
            $this->outpatient_mental_health = $data["outpatient_mental_health"];
            $this->outpatient_physician = $data["outpatient_physician"];
            $this->plan_market = $data["plan_market"];
            $this->plan_type = $data["plan_type"];
            $this->preferred_brand_drugs = $data["preferred_brand_drugs"];
            $this->preventative_care = $data["preventative_care"];
            $this->primary_care_physician = $data["primary_care_physician"];
            $this->rehabilitation_services = $data["rehabilitation_services"];
            $this->specialist = $data["specialist"];
            $this->specialty_drugs = $data["specialty_drugs"];
            $this->urgent_care = $data["urgent_care"];
            $this->match_percentage = $data["match_percentage"];
            $this->perfect_match_percentage = $data["perfect_match_percentage"];
        }
    }
    /**
     * Gets adult_dental
     * @return bool
     */
    public function getAdultDental()
    {
        return $this->adult_dental;
    }
  
    /**
     * Sets adult_dental
     * @param bool $adult_dental Does the plan provide dental coverage for adults?
     * @return $this
     */
    public function setAdultDental($adult_dental)
    {
        
        $this->adult_dental = $adult_dental;
        return $this;
    }
    /**
     * Gets ambulance
     * @return string
     */
    public function getAmbulance()
    {
        return $this->ambulance;
    }
  
    /**
     * Sets ambulance
     * @param string $ambulance Benefits string for ambulance coverage
     * @return $this
     */
    public function setAmbulance($ambulance)
    {
        
        $this->ambulance = $ambulance;
        return $this;
    }
    /**
     * Gets benefits_summary_url
     * @return string
     */
    public function getBenefitsSummaryUrl()
    {
        return $this->benefits_summary_url;
    }
  
    /**
     * Sets benefits_summary_url
     * @param string $benefits_summary_url Link to the summary of benefits and coverage (SBC) document.
     * @return $this
     */
    public function setBenefitsSummaryUrl($benefits_summary_url)
    {
        
        $this->benefits_summary_url = $benefits_summary_url;
        return $this;
    }
    /**
     * Gets buy_link
     * @return string
     */
    public function getBuyLink()
    {
        return $this->buy_link;
    }
  
    /**
     * Sets buy_link
     * @param string $buy_link Link to a location to purchase the plan.
     * @return $this
     */
    public function setBuyLink($buy_link)
    {
        
        $this->buy_link = $buy_link;
        return $this;
    }
    /**
     * Gets carrier_name
     * @return string
     */
    public function getCarrierName()
    {
        return $this->carrier_name;
    }
  
    /**
     * Sets carrier_name
     * @param string $carrier_name Name of the insurance carrier
     * @return $this
     */
    public function setCarrierName($carrier_name)
    {
        
        $this->carrier_name = $carrier_name;
        return $this;
    }
    /**
     * Gets child_dental
     * @return bool
     */
    public function getChildDental()
    {
        return $this->child_dental;
    }
  
    /**
     * Sets child_dental
     * @param bool $child_dental Does the plan provide dental coverage for children?
     * @return $this
     */
    public function setChildDental($child_dental)
    {
        
        $this->child_dental = $child_dental;
        return $this;
    }
    /**
     * Gets child_eyewear
     * @return string
     */
    public function getChildEyewear()
    {
        return $this->child_eyewear;
    }
  
    /**
     * Sets child_eyewear
     * @param string $child_eyewear Child eyewear benefits summary
     * @return $this
     */
    public function setChildEyewear($child_eyewear)
    {
        
        $this->child_eyewear = $child_eyewear;
        return $this;
    }
    /**
     * Gets customer_service_phone_number
     * @return string
     */
    public function getCustomerServicePhoneNumber()
    {
        return $this->customer_service_phone_number;
    }
  
    /**
     * Sets customer_service_phone_number
     * @param string $customer_service_phone_number Phone number to contact the insurance carrier
     * @return $this
     */
    public function setCustomerServicePhoneNumber($customer_service_phone_number)
    {
        
        $this->customer_service_phone_number = $customer_service_phone_number;
        return $this;
    }
    /**
     * Gets durable_medical_equipment
     * @return string
     */
    public function getDurableMedicalEquipment()
    {
        return $this->durable_medical_equipment;
    }
  
    /**
     * Sets durable_medical_equipment
     * @param string $durable_medical_equipment Benefits summary for durable medical equipment
     * @return $this
     */
    public function setDurableMedicalEquipment($durable_medical_equipment)
    {
        
        $this->durable_medical_equipment = $durable_medical_equipment;
        return $this;
    }
    /**
     * Gets diagnostic_test
     * @return string
     */
    public function getDiagnosticTest()
    {
        return $this->diagnostic_test;
    }
  
    /**
     * Sets diagnostic_test
     * @param string $diagnostic_test Diagnostic tests benefit summary
     * @return $this
     */
    public function setDiagnosticTest($diagnostic_test)
    {
        
        $this->diagnostic_test = $diagnostic_test;
        return $this;
    }
    /**
     * Gets drug_formulary_url
     * @return string
     */
    public function getDrugFormularyUrl()
    {
        return $this->drug_formulary_url;
    }
  
    /**
     * Sets drug_formulary_url
     * @param string $drug_formulary_url Link to the summary of drug benefits for the plan
     * @return $this
     */
    public function setDrugFormularyUrl($drug_formulary_url)
    {
        
        $this->drug_formulary_url = $drug_formulary_url;
        return $this;
    }
    /**
     * Gets emergency_room
     * @return string
     */
    public function getEmergencyRoom()
    {
        return $this->emergency_room;
    }
  
    /**
     * Sets emergency_room
     * @param string $emergency_room Description of costs when visiting the ER
     * @return $this
     */
    public function setEmergencyRoom($emergency_room)
    {
        
        $this->emergency_room = $emergency_room;
        return $this;
    }
    /**
     * Gets family_drug_deductible
     * @return string
     */
    public function getFamilyDrugDeductible()
    {
        return $this->family_drug_deductible;
    }
  
    /**
     * Sets family_drug_deductible
     * @param string $family_drug_deductible Deductible for drugs when a family is on the plan.
     * @return $this
     */
    public function setFamilyDrugDeductible($family_drug_deductible)
    {
        
        $this->family_drug_deductible = $family_drug_deductible;
        return $this;
    }
    /**
     * Gets family_drug_moop
     * @return string
     */
    public function getFamilyDrugMoop()
    {
        return $this->family_drug_moop;
    }
  
    /**
     * Sets family_drug_moop
     * @param string $family_drug_moop Maximum out-of-pocket for drugs when a family is on the plan
     * @return $this
     */
    public function setFamilyDrugMoop($family_drug_moop)
    {
        
        $this->family_drug_moop = $family_drug_moop;
        return $this;
    }
    /**
     * Gets family_medical_deductible
     * @return string
     */
    public function getFamilyMedicalDeductible()
    {
        return $this->family_medical_deductible;
    }
  
    /**
     * Sets family_medical_deductible
     * @param string $family_medical_deductible Deductible when a family is on the plan
     * @return $this
     */
    public function setFamilyMedicalDeductible($family_medical_deductible)
    {
        
        $this->family_medical_deductible = $family_medical_deductible;
        return $this;
    }
    /**
     * Gets family_medical_moop
     * @return string
     */
    public function getFamilyMedicalMoop()
    {
        return $this->family_medical_moop;
    }
  
    /**
     * Sets family_medical_moop
     * @param string $family_medical_moop Maximum out-of-pocket when a family is on the plan
     * @return $this
     */
    public function setFamilyMedicalMoop($family_medical_moop)
    {
        
        $this->family_medical_moop = $family_medical_moop;
        return $this;
    }
    /**
     * Gets generic_drugs
     * @return string
     */
    public function getGenericDrugs()
    {
        return $this->generic_drugs;
    }
  
    /**
     * Sets generic_drugs
     * @param string $generic_drugs Cost for generic drugs
     * @return $this
     */
    public function setGenericDrugs($generic_drugs)
    {
        
        $this->generic_drugs = $generic_drugs;
        return $this;
    }
    /**
     * Gets hios_issuer_id
     * @return string
     */
    public function getHiosIssuerId()
    {
        return $this->hios_issuer_id;
    }
  
    /**
     * Sets hios_issuer_id
     * @param string $hios_issuer_id 
     * @return $this
     */
    public function setHiosIssuerId($hios_issuer_id)
    {
        
        $this->hios_issuer_id = $hios_issuer_id;
        return $this;
    }
    /**
     * Gets id
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param string $id Government-issued HIOS plan ID
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    /**
     * Gets imaging
     * @return string
     */
    public function getImaging()
    {
        return $this->imaging;
    }
  
    /**
     * Sets imaging
     * @param string $imaging Benefits summary for imaging coverage
     * @return $this
     */
    public function setImaging($imaging)
    {
        
        $this->imaging = $imaging;
        return $this;
    }
    /**
     * Gets individual_drug_deductible
     * @return string
     */
    public function getIndividualDrugDeductible()
    {
        return $this->individual_drug_deductible;
    }
  
    /**
     * Sets individual_drug_deductible
     * @param string $individual_drug_deductible Deductible for drugs when an individual is on the plan
     * @return $this
     */
    public function setIndividualDrugDeductible($individual_drug_deductible)
    {
        
        $this->individual_drug_deductible = $individual_drug_deductible;
        return $this;
    }
    /**
     * Gets individual_drug_moop
     * @return string
     */
    public function getIndividualDrugMoop()
    {
        return $this->individual_drug_moop;
    }
  
    /**
     * Sets individual_drug_moop
     * @param string $individual_drug_moop Maximum out-of-pocket for drugs when an individual is on the plan
     * @return $this
     */
    public function setIndividualDrugMoop($individual_drug_moop)
    {
        
        $this->individual_drug_moop = $individual_drug_moop;
        return $this;
    }
    /**
     * Gets individual_medical_deductible
     * @return string
     */
    public function getIndividualMedicalDeductible()
    {
        return $this->individual_medical_deductible;
    }
  
    /**
     * Sets individual_medical_deductible
     * @param string $individual_medical_deductible Deductible when an individual is on the plan
     * @return $this
     */
    public function setIndividualMedicalDeductible($individual_medical_deductible)
    {
        
        $this->individual_medical_deductible = $individual_medical_deductible;
        return $this;
    }
    /**
     * Gets individual_medical_moop
     * @return string
     */
    public function getIndividualMedicalMoop()
    {
        return $this->individual_medical_moop;
    }
  
    /**
     * Sets individual_medical_moop
     * @param string $individual_medical_moop Maximum out-of-pocket when an individual is on the plan
     * @return $this
     */
    public function setIndividualMedicalMoop($individual_medical_moop)
    {
        
        $this->individual_medical_moop = $individual_medical_moop;
        return $this;
    }
    /**
     * Gets inpatient_facility
     * @return string
     */
    public function getInpatientFacility()
    {
        return $this->inpatient_facility;
    }
  
    /**
     * Sets inpatient_facility
     * @param string $inpatient_facility Cost under the plan for an inpatient facility
     * @return $this
     */
    public function setInpatientFacility($inpatient_facility)
    {
        
        $this->inpatient_facility = $inpatient_facility;
        return $this;
    }
    /**
     * Gets inpatient_physician
     * @return string
     */
    public function getInpatientPhysician()
    {
        return $this->inpatient_physician;
    }
  
    /**
     * Sets inpatient_physician
     * @param string $inpatient_physician Cost under the plan for an inpatient physician
     * @return $this
     */
    public function setInpatientPhysician($inpatient_physician)
    {
        
        $this->inpatient_physician = $inpatient_physician;
        return $this;
    }
    /**
     * Gets level
     * @return string
     */
    public function getLevel()
    {
        return $this->level;
    }
  
    /**
     * Sets level
     * @param string $level Plan metal grouping (e.g. platinum, gold, silver, etc)
     * @return $this
     */
    public function setLevel($level)
    {
        
        $this->level = $level;
        return $this;
    }
    /**
     * Gets logo_url
     * @return string
     */
    public function getLogoUrl()
    {
        return $this->logo_url;
    }
  
    /**
     * Sets logo_url
     * @param string $logo_url Link to a copy of the insurance carrier's logo
     * @return $this
     */
    public function setLogoUrl($logo_url)
    {
        
        $this->logo_url = $logo_url;
        return $this;
    }
    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }
  
    /**
     * Sets name
     * @param string $name Marketing name of the plan
     * @return $this
     */
    public function setName($name)
    {
        
        $this->name = $name;
        return $this;
    }
    /**
     * Gets non_preferred_brand_drugs
     * @return string
     */
    public function getNonPreferredBrandDrugs()
    {
        return $this->non_preferred_brand_drugs;
    }
  
    /**
     * Sets non_preferred_brand_drugs
     * @param string $non_preferred_brand_drugs Cost under the plan for non-preferred brand drugs
     * @return $this
     */
    public function setNonPreferredBrandDrugs($non_preferred_brand_drugs)
    {
        
        $this->non_preferred_brand_drugs = $non_preferred_brand_drugs;
        return $this;
    }
    /**
     * Gets on_market
     * @return bool
     */
    public function getOnMarket()
    {
        return $this->on_market;
    }
  
    /**
     * Sets on_market
     * @param bool $on_market Is the plan on-market?
     * @return $this
     */
    public function setOnMarket($on_market)
    {
        
        $this->on_market = $on_market;
        return $this;
    }
    /**
     * Gets off_market
     * @return bool
     */
    public function getOffMarket()
    {
        return $this->off_market;
    }
  
    /**
     * Sets off_market
     * @param bool $off_market Is the plan off-market?
     * @return $this
     */
    public function setOffMarket($off_market)
    {
        
        $this->off_market = $off_market;
        return $this;
    }
    /**
     * Gets out_of_network_coverage
     * @return bool
     */
    public function getOutOfNetworkCoverage()
    {
        return $this->out_of_network_coverage;
    }
  
    /**
     * Sets out_of_network_coverage
     * @param bool $out_of_network_coverage Does this plan provide any out of network coverage?
     * @return $this
     */
    public function setOutOfNetworkCoverage($out_of_network_coverage)
    {
        
        $this->out_of_network_coverage = $out_of_network_coverage;
        return $this;
    }
    /**
     * Gets outpatient_facility
     * @return string
     */
    public function getOutpatientFacility()
    {
        return $this->outpatient_facility;
    }
  
    /**
     * Sets outpatient_facility
     * @param string $outpatient_facility Benefits summary for outpatient facility coverage
     * @return $this
     */
    public function setOutpatientFacility($outpatient_facility)
    {
        
        $this->outpatient_facility = $outpatient_facility;
        return $this;
    }
    /**
     * Gets outpatient_mental_health
     * @return string
     */
    public function getOutpatientMentalHealth()
    {
        return $this->outpatient_mental_health;
    }
  
    /**
     * Sets outpatient_mental_health
     * @param string $outpatient_mental_health Benefits summary for outpatient mental health coverage
     * @return $this
     */
    public function setOutpatientMentalHealth($outpatient_mental_health)
    {
        
        $this->outpatient_mental_health = $outpatient_mental_health;
        return $this;
    }
    /**
     * Gets outpatient_physician
     * @return string
     */
    public function getOutpatientPhysician()
    {
        return $this->outpatient_physician;
    }
  
    /**
     * Sets outpatient_physician
     * @param string $outpatient_physician Benefits summary for outpatient physician coverage
     * @return $this
     */
    public function setOutpatientPhysician($outpatient_physician)
    {
        
        $this->outpatient_physician = $outpatient_physician;
        return $this;
    }
    /**
     * Gets plan_market
     * @return string
     */
    public function getPlanMarket()
    {
        return $this->plan_market;
    }
  
    /**
     * Sets plan_market
     * @param string $plan_market Market in which the plan is offered (on_marketplace, shop, etc)
     * @return $this
     */
    public function setPlanMarket($plan_market)
    {
        
        $this->plan_market = $plan_market;
        return $this;
    }
    /**
     * Gets plan_type
     * @return string
     */
    public function getPlanType()
    {
        return $this->plan_type;
    }
  
    /**
     * Sets plan_type
     * @param string $plan_type Category of the plan (e.g. EPO, HMO, PPO, POS, Indemnity)
     * @return $this
     */
    public function setPlanType($plan_type)
    {
        
        $this->plan_type = $plan_type;
        return $this;
    }
    /**
     * Gets preferred_brand_drugs
     * @return string
     */
    public function getPreferredBrandDrugs()
    {
        return $this->preferred_brand_drugs;
    }
  
    /**
     * Sets preferred_brand_drugs
     * @param string $preferred_brand_drugs Cost under the plan for perferred brand drugs
     * @return $this
     */
    public function setPreferredBrandDrugs($preferred_brand_drugs)
    {
        
        $this->preferred_brand_drugs = $preferred_brand_drugs;
        return $this;
    }
    /**
     * Gets preventative_care
     * @return string
     */
    public function getPreventativeCare()
    {
        return $this->preventative_care;
    }
  
    /**
     * Sets preventative_care
     * @param string $preventative_care Benefits summary for preventative care
     * @return $this
     */
    public function setPreventativeCare($preventative_care)
    {
        
        $this->preventative_care = $preventative_care;
        return $this;
    }
    /**
     * Gets primary_care_physician
     * @return string
     */
    public function getPrimaryCarePhysician()
    {
        return $this->primary_care_physician;
    }
  
    /**
     * Sets primary_care_physician
     * @param string $primary_care_physician Cost under the plan to visit a Primary Care Physician
     * @return $this
     */
    public function setPrimaryCarePhysician($primary_care_physician)
    {
        
        $this->primary_care_physician = $primary_care_physician;
        return $this;
    }
    /**
     * Gets rehabilitation_services
     * @return string
     */
    public function getRehabilitationServices()
    {
        return $this->rehabilitation_services;
    }
  
    /**
     * Sets rehabilitation_services
     * @param string $rehabilitation_services Benefits summary for rehabilitation services
     * @return $this
     */
    public function setRehabilitationServices($rehabilitation_services)
    {
        
        $this->rehabilitation_services = $rehabilitation_services;
        return $this;
    }
    /**
     * Gets specialist
     * @return string
     */
    public function getSpecialist()
    {
        return $this->specialist;
    }
  
    /**
     * Sets specialist
     * @param string $specialist Cost under the plan to visit a specialist
     * @return $this
     */
    public function setSpecialist($specialist)
    {
        
        $this->specialist = $specialist;
        return $this;
    }
    /**
     * Gets specialty_drugs
     * @return string
     */
    public function getSpecialtyDrugs()
    {
        return $this->specialty_drugs;
    }
  
    /**
     * Sets specialty_drugs
     * @param string $specialty_drugs Cost under the plan for specialty drugs
     * @return $this
     */
    public function setSpecialtyDrugs($specialty_drugs)
    {
        
        $this->specialty_drugs = $specialty_drugs;
        return $this;
    }
    /**
     * Gets urgent_care
     * @return string
     */
    public function getUrgentCare()
    {
        return $this->urgent_care;
    }
  
    /**
     * Sets urgent_care
     * @param string $urgent_care Benefits summary for urgent care
     * @return $this
     */
    public function setUrgentCare($urgent_care)
    {
        
        $this->urgent_care = $urgent_care;
        return $this;
    }
    /**
     * Gets match_percentage
     * @return int
     */
    public function getMatchPercentage()
    {
        return $this->match_percentage;
    }
  
    /**
     * Sets match_percentage
     * @param int $match_percentage Percentage of doctors who matched this Plan
     * @return $this
     */
    public function setMatchPercentage($match_percentage)
    {
        
        $this->match_percentage = $match_percentage;
        return $this;
    }
    /**
     * Gets perfect_match_percentage
     * @return int
     */
    public function getPerfectMatchPercentage()
    {
        return $this->perfect_match_percentage;
    }
  
    /**
     * Sets perfect_match_percentage
     * @param int $perfect_match_percentage Percentage of employees with 100% match
     * @return $this
     */
    public function setPerfectMatchPercentage($perfect_match_percentage)
    {
        
        $this->perfect_match_percentage = $perfect_match_percentage;
        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Vericred\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Vericred\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}
