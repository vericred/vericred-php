<?php
/**
 * DrugCoverage
 *
 * PHP version 5
 *
 * @category Class
 * @package  Vericred\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * DrugCoverage Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Vericred\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class DrugCoverage implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    static $swaggerModelName = 'DrugCoverage';

    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'plan_id' => 'string',
        'ndc_package_code' => 'string',
        'tier' => 'string',
        'quantity_limit' => 'bool',
        'prior_authorization' => 'bool',
        'step_therapy' => 'bool'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'plan_id' => 'plan_id',
        'ndc_package_code' => 'ndc_package_code',
        'tier' => 'tier',
        'quantity_limit' => 'quantity_limit',
        'prior_authorization' => 'prior_authorization',
        'step_therapy' => 'step_therapy'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'plan_id' => 'setPlanId',
        'ndc_package_code' => 'setNdcPackageCode',
        'tier' => 'setTier',
        'quantity_limit' => 'setQuantityLimit',
        'prior_authorization' => 'setPriorAuthorization',
        'step_therapy' => 'setStepTherapy'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'plan_id' => 'getPlanId',
        'ndc_package_code' => 'getNdcPackageCode',
        'tier' => 'getTier',
        'quantity_limit' => 'getQuantityLimit',
        'prior_authorization' => 'getPriorAuthorization',
        'step_therapy' => 'getStepTherapy'
    );
  
    static function getters() {
        return self::$getters;
    }

    /**
      * $plan_id Health Insurance Oversight System id
      * @var string
      */
    protected $plan_id;
    /**
      * $ndc_package_code NDC package code
      * @var string
      */
    protected $ndc_package_code;
    /**
      * $tier Tier Name
      * @var string
      */
    protected $tier;
    /**
      * $quantity_limit Quantity limit exists
      * @var bool
      */
    protected $quantity_limit;
    /**
      * $prior_authorization Prior authorization required
      * @var bool
      */
    protected $prior_authorization;
    /**
      * $step_therapy Step Treatment required
      * @var bool
      */
    protected $step_therapy;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        
        if ($data != null) {
            $this->plan_id = $data["plan_id"];
            $this->ndc_package_code = $data["ndc_package_code"];
            $this->tier = $data["tier"];
            $this->quantity_limit = $data["quantity_limit"];
            $this->prior_authorization = $data["prior_authorization"];
            $this->step_therapy = $data["step_therapy"];
        }
    }
    /**
     * Gets plan_id
     * @return string
     */
    public function getPlanId()
    {
        return $this->plan_id;
    }
  
    /**
     * Sets plan_id
     * @param string $plan_id Health Insurance Oversight System id
     * @return $this
     */
    public function setPlanId($plan_id)
    {
        
        $this->plan_id = $plan_id;
        return $this;
    }
    /**
     * Gets ndc_package_code
     * @return string
     */
    public function getNdcPackageCode()
    {
        return $this->ndc_package_code;
    }
  
    /**
     * Sets ndc_package_code
     * @param string $ndc_package_code NDC package code
     * @return $this
     */
    public function setNdcPackageCode($ndc_package_code)
    {
        
        $this->ndc_package_code = $ndc_package_code;
        return $this;
    }
    /**
     * Gets tier
     * @return string
     */
    public function getTier()
    {
        return $this->tier;
    }
  
    /**
     * Sets tier
     * @param string $tier Tier Name
     * @return $this
     */
    public function setTier($tier)
    {
        
        $this->tier = $tier;
        return $this;
    }
    /**
     * Gets quantity_limit
     * @return bool
     */
    public function getQuantityLimit()
    {
        return $this->quantity_limit;
    }
  
    /**
     * Sets quantity_limit
     * @param bool $quantity_limit Quantity limit exists
     * @return $this
     */
    public function setQuantityLimit($quantity_limit)
    {
        
        $this->quantity_limit = $quantity_limit;
        return $this;
    }
    /**
     * Gets prior_authorization
     * @return bool
     */
    public function getPriorAuthorization()
    {
        return $this->prior_authorization;
    }
  
    /**
     * Sets prior_authorization
     * @param bool $prior_authorization Prior authorization required
     * @return $this
     */
    public function setPriorAuthorization($prior_authorization)
    {
        
        $this->prior_authorization = $prior_authorization;
        return $this;
    }
    /**
     * Gets step_therapy
     * @return bool
     */
    public function getStepTherapy()
    {
        return $this->step_therapy;
    }
  
    /**
     * Sets step_therapy
     * @param bool $step_therapy Step Treatment required
     * @return $this
     */
    public function setStepTherapy($step_therapy)
    {
        
        $this->step_therapy = $step_therapy;
        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Vericred\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Vericred\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}
