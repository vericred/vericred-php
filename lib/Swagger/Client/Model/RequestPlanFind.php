<?php
/**
 * RequestPlanFind
 *
 * PHP version 5
 *
 * @category Class
 * @package  Vericred\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * RequestPlanFind Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Vericred\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class RequestPlanFind implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    static $swaggerModelName = 'RequestPlanFind';

    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'applicants' => '\Swagger\Client\Model\RequestPlanFindApplicant[]',
        'enrollment_date' => 'string',
        'drug_packages' => '\Swagger\Client\Model\DrugPackage[]',
        'fips_code' => 'string',
        'household_income' => 'int',
        'household_size' => 'int',
        'market' => 'string',
        'providers' => '\Swagger\Client\Model\RequestPlanFindProvider[]',
        'page' => 'int',
        'per_page' => 'int',
        'sort' => 'string',
        'zip_code' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'applicants' => 'applicants',
        'enrollment_date' => 'enrollment_date',
        'drug_packages' => 'drug_packages',
        'fips_code' => 'fips_code',
        'household_income' => 'household_income',
        'household_size' => 'household_size',
        'market' => 'market',
        'providers' => 'providers',
        'page' => 'page',
        'per_page' => 'per_page',
        'sort' => 'sort',
        'zip_code' => 'zip_code'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'applicants' => 'setApplicants',
        'enrollment_date' => 'setEnrollmentDate',
        'drug_packages' => 'setDrugPackages',
        'fips_code' => 'setFipsCode',
        'household_income' => 'setHouseholdIncome',
        'household_size' => 'setHouseholdSize',
        'market' => 'setMarket',
        'providers' => 'setProviders',
        'page' => 'setPage',
        'per_page' => 'setPerPage',
        'sort' => 'setSort',
        'zip_code' => 'setZipCode'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'applicants' => 'getApplicants',
        'enrollment_date' => 'getEnrollmentDate',
        'drug_packages' => 'getDrugPackages',
        'fips_code' => 'getFipsCode',
        'household_income' => 'getHouseholdIncome',
        'household_size' => 'getHouseholdSize',
        'market' => 'getMarket',
        'providers' => 'getProviders',
        'page' => 'getPage',
        'per_page' => 'getPerPage',
        'sort' => 'getSort',
        'zip_code' => 'getZipCode'
    );
  
    static function getters() {
        return self::$getters;
    }

    /**
      * $applicants Applicants for desired plans.
      * @var \Swagger\Client\Model\RequestPlanFindApplicant[]
      */
    protected $applicants;
    /**
      * $enrollment_date Date of enrollment
      * @var string
      */
    protected $enrollment_date;
    /**
      * $drug_packages National Drug Code Package Id
      * @var \Swagger\Client\Model\DrugPackage[]
      */
    protected $drug_packages;
    /**
      * $fips_code County code to determine eligibility
      * @var string
      */
    protected $fips_code;
    /**
      * $household_income Total household income.
      * @var int
      */
    protected $household_income;
    /**
      * $household_size Number of people living in household.
      * @var int
      */
    protected $household_size;
    /**
      * $market Type of plan to search for.
      * @var string
      */
    protected $market;
    /**
      * $providers List of providers to search for.
      * @var \Swagger\Client\Model\RequestPlanFindProvider[]
      */
    protected $providers;
    /**
      * $page Selected page of paginated response.
      * @var int
      */
    protected $page;
    /**
      * $per_page Results per page of response.
      * @var int
      */
    protected $per_page;
    /**
      * $sort Sort responses by plan field.
      * @var string
      */
    protected $sort;
    /**
      * $zip_code 5-digit zip code - this helps determine pricing.
      * @var string
      */
    protected $zip_code;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        
        if ($data != null) {
            $this->applicants = $data["applicants"];
            $this->enrollment_date = $data["enrollment_date"];
            $this->drug_packages = $data["drug_packages"];
            $this->fips_code = $data["fips_code"];
            $this->household_income = $data["household_income"];
            $this->household_size = $data["household_size"];
            $this->market = $data["market"];
            $this->providers = $data["providers"];
            $this->page = $data["page"];
            $this->per_page = $data["per_page"];
            $this->sort = $data["sort"];
            $this->zip_code = $data["zip_code"];
        }
    }
    /**
     * Gets applicants
     * @return \Swagger\Client\Model\RequestPlanFindApplicant[]
     */
    public function getApplicants()
    {
        return $this->applicants;
    }
  
    /**
     * Sets applicants
     * @param \Swagger\Client\Model\RequestPlanFindApplicant[] $applicants Applicants for desired plans.
     * @return $this
     */
    public function setApplicants($applicants)
    {
        
        $this->applicants = $applicants;
        return $this;
    }
    /**
     * Gets enrollment_date
     * @return string
     */
    public function getEnrollmentDate()
    {
        return $this->enrollment_date;
    }
  
    /**
     * Sets enrollment_date
     * @param string $enrollment_date Date of enrollment
     * @return $this
     */
    public function setEnrollmentDate($enrollment_date)
    {
        
        $this->enrollment_date = $enrollment_date;
        return $this;
    }
    /**
     * Gets drug_packages
     * @return \Swagger\Client\Model\DrugPackage[]
     */
    public function getDrugPackages()
    {
        return $this->drug_packages;
    }
  
    /**
     * Sets drug_packages
     * @param \Swagger\Client\Model\DrugPackage[] $drug_packages National Drug Code Package Id
     * @return $this
     */
    public function setDrugPackages($drug_packages)
    {
        
        $this->drug_packages = $drug_packages;
        return $this;
    }
    /**
     * Gets fips_code
     * @return string
     */
    public function getFipsCode()
    {
        return $this->fips_code;
    }
  
    /**
     * Sets fips_code
     * @param string $fips_code County code to determine eligibility
     * @return $this
     */
    public function setFipsCode($fips_code)
    {
        
        $this->fips_code = $fips_code;
        return $this;
    }
    /**
     * Gets household_income
     * @return int
     */
    public function getHouseholdIncome()
    {
        return $this->household_income;
    }
  
    /**
     * Sets household_income
     * @param int $household_income Total household income.
     * @return $this
     */
    public function setHouseholdIncome($household_income)
    {
        
        $this->household_income = $household_income;
        return $this;
    }
    /**
     * Gets household_size
     * @return int
     */
    public function getHouseholdSize()
    {
        return $this->household_size;
    }
  
    /**
     * Sets household_size
     * @param int $household_size Number of people living in household.
     * @return $this
     */
    public function setHouseholdSize($household_size)
    {
        
        $this->household_size = $household_size;
        return $this;
    }
    /**
     * Gets market
     * @return string
     */
    public function getMarket()
    {
        return $this->market;
    }
  
    /**
     * Sets market
     * @param string $market Type of plan to search for.
     * @return $this
     */
    public function setMarket($market)
    {
        
        $this->market = $market;
        return $this;
    }
    /**
     * Gets providers
     * @return \Swagger\Client\Model\RequestPlanFindProvider[]
     */
    public function getProviders()
    {
        return $this->providers;
    }
  
    /**
     * Sets providers
     * @param \Swagger\Client\Model\RequestPlanFindProvider[] $providers List of providers to search for.
     * @return $this
     */
    public function setProviders($providers)
    {
        
        $this->providers = $providers;
        return $this;
    }
    /**
     * Gets page
     * @return int
     */
    public function getPage()
    {
        return $this->page;
    }
  
    /**
     * Sets page
     * @param int $page Selected page of paginated response.
     * @return $this
     */
    public function setPage($page)
    {
        
        $this->page = $page;
        return $this;
    }
    /**
     * Gets per_page
     * @return int
     */
    public function getPerPage()
    {
        return $this->per_page;
    }
  
    /**
     * Sets per_page
     * @param int $per_page Results per page of response.
     * @return $this
     */
    public function setPerPage($per_page)
    {
        
        $this->per_page = $per_page;
        return $this;
    }
    /**
     * Gets sort
     * @return string
     */
    public function getSort()
    {
        return $this->sort;
    }
  
    /**
     * Sets sort
     * @param string $sort Sort responses by plan field.
     * @return $this
     */
    public function setSort($sort)
    {
        
        $this->sort = $sort;
        return $this;
    }
    /**
     * Gets zip_code
     * @return string
     */
    public function getZipCode()
    {
        return $this->zip_code;
    }
  
    /**
     * Sets zip_code
     * @param string $zip_code 5-digit zip code - this helps determine pricing.
     * @return $this
     */
    public function setZipCode($zip_code)
    {
        
        $this->zip_code = $zip_code;
        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Vericred\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Vericred\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}
