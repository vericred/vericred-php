<?php
/**
 * RateRequestTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Vericred\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/*
 * Vericred API
 *
 */

/*
 Vericred's API allows you to search for Health Plans that a specific doctor
accepts.

## Getting Started

Visit our [Developer Portal](https://developers.vericred.com) to
create an account.

Once you have created an account, you can create one Application for
Production and another for our Sandbox (select the appropriate Plan when
you create the Application).

## SDKs

Our API follows standard REST conventions, so you can use any HTTP client
to integrate with us. You will likely find it easier to use one of our
[autogenerated SDKs](https://github.com/vericred/?query=vericred-),
which we make available for several common programming languages.

## Authentication

To authenticate, pass the API Key you created in the Developer Portal as
a `Vericred-Api-Key` header.

`curl -H 'Vericred-Api-Key: YOUR_KEY' "https://api.vericred.com/providers?search_term=Foo&zip_code=11215"`

## Versioning

Vericred's API default to the latest version.  However, if you need a specific
version, you can request it with an `Accept-Version` header.

The current version is `v3`.  Previous versions are `v1` and `v2`.

`curl -H 'Vericred-Api-Key: YOUR_KEY' -H 'Accept-Version: v2' "https://api.vericred.com/providers?search_term=Foo&zip_code=11215"`

## Pagination

Endpoints that accept `page` and `per_page` parameters are paginated. They expose
four additional fields that contain data about your position in the response,
namely `Total`, `Per-Page`, `Link`, and `Page` as described in [RFC-5988](https://tools.ietf.org/html/rfc5988).

For example, to display 5 results per page and view the second page of a
`GET` to `/networks`, your final request would be `GET /networks?....page=2&per_page=5`.

## Sideloading

When we return multiple levels of an object graph (e.g. `Provider`s and their `State`s
we sideload the associated data.  In this example, we would provide an Array of
`State`s and a `state_id` for each provider.  This is done primarily to reduce the
payload size since many of the `Provider`s will share a `State`

```
{
  providers: [{ id: 1, state_id: 1}, { id: 2, state_id: 1 }],
  states: [{ id: 1, code: 'NY' }]
}
```

If you need the second level of the object graph, you can just match the
corresponding id.

## Selecting specific data

All endpoints allow you to specify which fields you would like to return.
This allows you to limit the response to contain only the data you need.

For example, let's take a request that returns the following JSON by default

```
{
  provider: {
    id: 1,
    name: 'John',
    phone: '1234567890',
    field_we_dont_care_about: 'value_we_dont_care_about'
  },
  states: [{
    id: 1,
    name: 'New York',
    code: 'NY',
    field_we_dont_care_about: 'value_we_dont_care_about'
  }]
}
```

To limit our results to only return the fields we care about, we specify the
`select` query string parameter for the corresponding fields in the JSON
document.

In this case, we want to select `name` and `phone` from the `provider` key,
so we would add the parameters `select=provider.name,provider.phone`.
We also want the `name` and `code` from the `states` key, so we would
add the parameters `select=states.name,states.code`.  The id field of
each document is always returned whether or not it is requested.

Our final request would be `GET /providers/12345?select=provider.name,provider.phone,states.name,states.code`

The response would be

```
{
  provider: {
    id: 1,
    name: 'John',
    phone: '1234567890'
  },
  states: [{
    id: 1,
    name: 'New York',
    code: 'NY'
  }]
}
```

## Benefits summary format
Benefit cost-share strings are formatted to capture:
 * Network tiers
 * Compound or conditional cost-share
 * Limits on the cost-share
 * Benefit-specific maximum out-of-pocket costs

**Example #1**
As an example, we would represent [this Summary of Benefits &amp; Coverage](https://s3.amazonaws.com/vericred-data/SBC/2017/33602TX0780032.pdf) as:

* **Hospital stay facility fees**:
  - Network Provider: `$400 copay/admit plus 20% coinsurance`
  - Out-of-Network Provider: `$1,500 copay/admit plus 50% coinsurance`
  - Vericred's format for this benefit: `In-Network: $400 before deductible then 20% after deductible / Out-of-Network: $1,500 before deductible then 50% after deductible`

* **Rehabilitation services:**
  - Network Provider: `20% coinsurance`
  - Out-of-Network Provider: `50% coinsurance`
  - Limitations & Exceptions: `35 visit maximum per benefit period combined with Chiropractic care.`
  - Vericred's format for this benefit: `In-Network: 20% after deductible / Out-of-Network: 50% after deductible | limit: 35 visit(s) per Benefit Period`

**Example #2**
In [this other Summary of Benefits &amp; Coverage](https://s3.amazonaws.com/vericred-data/SBC/2017/40733CA0110568.pdf), the **specialty_drugs** cost-share has a maximum out-of-pocket for in-network pharmacies.
* **Specialty drugs:**
  - Network Provider: `40% coinsurance up to a $500 maximum for up to a 30 day supply`
  - Out-of-Network Provider `Not covered`
  - Vericred's format for this benefit: `In-Network: 40% after deductible, up to $500 per script / Out-of-Network: 100%`

**BNF**

Here's a description of the benefits summary string, represented as a context-free grammar:

```
root                      ::= coverage

coverage                  ::= (simple_coverage | tiered_coverage) (space pipe space coverage_modifier)?
tiered_coverage           ::= tier (space slash space tier)*
tier                      ::= tier_name colon space (tier_coverage | not_applicable)
tier_coverage             ::= simple_coverage (space (then | or | and) space simple_coverage)* tier_limitation?
simple_coverage           ::= (pre_coverage_limitation space)? coverage_amount (space post_coverage_limitation)? (comma? space coverage_condition)?
coverage_modifier         ::= limit_condition colon space (((simple_coverage | simple_limitation) (semicolon space see_carrier_documentation)?) | see_carrier_documentation | waived_if_admitted | shared_across_tiers)
waived_if_admitted        ::= ("copay" space)? "waived if admitted"
simple_limitation         ::= pre_coverage_limitation space "copay applies"
tier_name                 ::= "In-Network-Tier-2" | "Out-of-Network" | "In-Network"
limit_condition           ::= "limit" | "condition"
tier_limitation           ::= comma space "up to" space (currency | (integer space time_unit plural?)) (space post_coverage_limitation)?
coverage_amount           ::= currency | unlimited | included | unknown | percentage | (digits space (treatment_unit | time_unit) plural?)
pre_coverage_limitation   ::= first space digits space time_unit plural?
post_coverage_limitation  ::= (((then space currency) | "per condition") space)? "per" space (treatment_unit | (integer space time_unit) | time_unit) plural?
coverage_condition        ::= ("before deductible" | "after deductible" | "penalty" | allowance | "in-state" | "out-of-state") (space allowance)?
allowance                 ::= upto_allowance | after_allowance
upto_allowance            ::= "up to" space (currency space)? "allowance"
after_allowance           ::= "after" space (currency space)? "allowance"
see_carrier_documentation ::= "see carrier documentation for more information"
shared_across_tiers       ::= "shared across all tiers"
unknown                   ::= "unknown"
unlimited                 ::= /[uU]nlimited/
included                  ::= /[iI]ncluded in [mM]edical/
time_unit                 ::= /[hH]our/ | (((/[cC]alendar/ | /[cC]ontract/) space)? /[yY]ear/) | /[mM]onth/ | /[dD]ay/ | /[wW]eek/ | /[vV]isit/ | /[lL]ifetime/ | ((((/[bB]enefit/ plural?) | /[eE]ligibility/) space)? /[pP]eriod/)
treatment_unit            ::= /[pP]erson/ | /[gG]roup/ | /[cC]ondition/ | /[sS]cript/ | /[vV]isit/ | /[eE]xam/ | /[iI]tem/ | /[sS]tay/ | /[tT]reatment/ | /[aA]dmission/ | /[eE]pisode/
comma                     ::= ","
colon                     ::= ":"
semicolon                 ::= ";"
pipe                      ::= "|"
slash                     ::= "/"
plural                    ::= "(s)" | "s"
then                      ::= "then" | ("," space) | space
or                        ::= "or"
and                       ::= "and"
not_applicable            ::= "Not Applicable" | "N/A" | "NA"
first                     ::= "first"
currency                  ::= "$" number
percentage                ::= number "%"
number                    ::= float | integer
float                     ::= digits "." digits
integer                   ::= /[0-9]/+ (comma_int | under_int)*
comma_int                 ::= ("," /[0-9]/*3) !"_"
under_int                 ::= ("_" /[0-9]/*3) !","
digits                    ::= /[0-9]/+ ("_" /[0-9]/+)*
space                     ::= /[ \t]/+
```


*/


/* OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Vericred\Client;

/**
 * RateRequestTest Class Doc Comment
 *
 * @category    Class */
// * @description RateRequest
/**
 * @package     Vericred\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class RateRequestTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test "RateRequest"
     */
    public function testRateRequest()
    {

    }

    /**
     * Test attribute "external_id"
     */
    public function testPropertyExternalId()
    {

    }

    /**
     * Test attribute "effective_date"
     */
    public function testPropertyEffectiveDate()
    {

    }

    /**
     * Test attribute "expiration_date"
     */
    public function testPropertyExpirationDate()
    {

    }

    /**
     * Test attribute "rating_area_natural_key"
     */
    public function testPropertyRatingAreaNaturalKey()
    {

    }

    /**
     * Test attribute "age_0"
     */
    public function testPropertyAge0()
    {

    }

    /**
     * Test attribute "age_0_tobacco"
     */
    public function testPropertyAge0Tobacco()
    {

    }

    /**
     * Test attribute "age_1"
     */
    public function testPropertyAge1()
    {

    }

    /**
     * Test attribute "age_1_tobacco"
     */
    public function testPropertyAge1Tobacco()
    {

    }

    /**
     * Test attribute "age_2"
     */
    public function testPropertyAge2()
    {

    }

    /**
     * Test attribute "age_2_tobacco"
     */
    public function testPropertyAge2Tobacco()
    {

    }

    /**
     * Test attribute "age_3"
     */
    public function testPropertyAge3()
    {

    }

    /**
     * Test attribute "age_3_tobacco"
     */
    public function testPropertyAge3Tobacco()
    {

    }

    /**
     * Test attribute "age_4"
     */
    public function testPropertyAge4()
    {

    }

    /**
     * Test attribute "age_4_tobacco"
     */
    public function testPropertyAge4Tobacco()
    {

    }

    /**
     * Test attribute "age_5"
     */
    public function testPropertyAge5()
    {

    }

    /**
     * Test attribute "age_5_tobacco"
     */
    public function testPropertyAge5Tobacco()
    {

    }

    /**
     * Test attribute "age_6"
     */
    public function testPropertyAge6()
    {

    }

    /**
     * Test attribute "age_6_tobacco"
     */
    public function testPropertyAge6Tobacco()
    {

    }

    /**
     * Test attribute "age_7"
     */
    public function testPropertyAge7()
    {

    }

    /**
     * Test attribute "age_7_tobacco"
     */
    public function testPropertyAge7Tobacco()
    {

    }

    /**
     * Test attribute "age_8"
     */
    public function testPropertyAge8()
    {

    }

    /**
     * Test attribute "age_8_tobacco"
     */
    public function testPropertyAge8Tobacco()
    {

    }

    /**
     * Test attribute "age_9"
     */
    public function testPropertyAge9()
    {

    }

    /**
     * Test attribute "age_9_tobacco"
     */
    public function testPropertyAge9Tobacco()
    {

    }

    /**
     * Test attribute "age_10"
     */
    public function testPropertyAge10()
    {

    }

    /**
     * Test attribute "age_10_tobacco"
     */
    public function testPropertyAge10Tobacco()
    {

    }

    /**
     * Test attribute "age_11"
     */
    public function testPropertyAge11()
    {

    }

    /**
     * Test attribute "age_11_tobacco"
     */
    public function testPropertyAge11Tobacco()
    {

    }

    /**
     * Test attribute "age_12"
     */
    public function testPropertyAge12()
    {

    }

    /**
     * Test attribute "age_12_tobacco"
     */
    public function testPropertyAge12Tobacco()
    {

    }

    /**
     * Test attribute "age_13"
     */
    public function testPropertyAge13()
    {

    }

    /**
     * Test attribute "age_13_tobacco"
     */
    public function testPropertyAge13Tobacco()
    {

    }

    /**
     * Test attribute "age_14"
     */
    public function testPropertyAge14()
    {

    }

    /**
     * Test attribute "age_14_tobacco"
     */
    public function testPropertyAge14Tobacco()
    {

    }

    /**
     * Test attribute "age_15"
     */
    public function testPropertyAge15()
    {

    }

    /**
     * Test attribute "age_15_tobacco"
     */
    public function testPropertyAge15Tobacco()
    {

    }

    /**
     * Test attribute "age_16"
     */
    public function testPropertyAge16()
    {

    }

    /**
     * Test attribute "age_16_tobacco"
     */
    public function testPropertyAge16Tobacco()
    {

    }

    /**
     * Test attribute "age_17"
     */
    public function testPropertyAge17()
    {

    }

    /**
     * Test attribute "age_17_tobacco"
     */
    public function testPropertyAge17Tobacco()
    {

    }

    /**
     * Test attribute "age_18"
     */
    public function testPropertyAge18()
    {

    }

    /**
     * Test attribute "age_18_tobacco"
     */
    public function testPropertyAge18Tobacco()
    {

    }

    /**
     * Test attribute "age_19"
     */
    public function testPropertyAge19()
    {

    }

    /**
     * Test attribute "age_19_tobacco"
     */
    public function testPropertyAge19Tobacco()
    {

    }

    /**
     * Test attribute "age_20"
     */
    public function testPropertyAge20()
    {

    }

    /**
     * Test attribute "age_20_tobacco"
     */
    public function testPropertyAge20Tobacco()
    {

    }

    /**
     * Test attribute "age_21"
     */
    public function testPropertyAge21()
    {

    }

    /**
     * Test attribute "age_21_tobacco"
     */
    public function testPropertyAge21Tobacco()
    {

    }

    /**
     * Test attribute "age_22"
     */
    public function testPropertyAge22()
    {

    }

    /**
     * Test attribute "age_22_tobacco"
     */
    public function testPropertyAge22Tobacco()
    {

    }

    /**
     * Test attribute "age_23"
     */
    public function testPropertyAge23()
    {

    }

    /**
     * Test attribute "age_23_tobacco"
     */
    public function testPropertyAge23Tobacco()
    {

    }

    /**
     * Test attribute "age_24"
     */
    public function testPropertyAge24()
    {

    }

    /**
     * Test attribute "age_24_tobacco"
     */
    public function testPropertyAge24Tobacco()
    {

    }

    /**
     * Test attribute "age_25"
     */
    public function testPropertyAge25()
    {

    }

    /**
     * Test attribute "age_25_tobacco"
     */
    public function testPropertyAge25Tobacco()
    {

    }

    /**
     * Test attribute "age_26"
     */
    public function testPropertyAge26()
    {

    }

    /**
     * Test attribute "age_26_tobacco"
     */
    public function testPropertyAge26Tobacco()
    {

    }

    /**
     * Test attribute "age_27"
     */
    public function testPropertyAge27()
    {

    }

    /**
     * Test attribute "age_27_tobacco"
     */
    public function testPropertyAge27Tobacco()
    {

    }

    /**
     * Test attribute "age_28"
     */
    public function testPropertyAge28()
    {

    }

    /**
     * Test attribute "age_28_tobacco"
     */
    public function testPropertyAge28Tobacco()
    {

    }

    /**
     * Test attribute "age_29"
     */
    public function testPropertyAge29()
    {

    }

    /**
     * Test attribute "age_29_tobacco"
     */
    public function testPropertyAge29Tobacco()
    {

    }

    /**
     * Test attribute "age_30"
     */
    public function testPropertyAge30()
    {

    }

    /**
     * Test attribute "age_30_tobacco"
     */
    public function testPropertyAge30Tobacco()
    {

    }

    /**
     * Test attribute "age_31"
     */
    public function testPropertyAge31()
    {

    }

    /**
     * Test attribute "age_31_tobacco"
     */
    public function testPropertyAge31Tobacco()
    {

    }

    /**
     * Test attribute "age_32"
     */
    public function testPropertyAge32()
    {

    }

    /**
     * Test attribute "age_32_tobacco"
     */
    public function testPropertyAge32Tobacco()
    {

    }

    /**
     * Test attribute "age_33"
     */
    public function testPropertyAge33()
    {

    }

    /**
     * Test attribute "age_33_tobacco"
     */
    public function testPropertyAge33Tobacco()
    {

    }

    /**
     * Test attribute "age_34"
     */
    public function testPropertyAge34()
    {

    }

    /**
     * Test attribute "age_34_tobacco"
     */
    public function testPropertyAge34Tobacco()
    {

    }

    /**
     * Test attribute "age_35"
     */
    public function testPropertyAge35()
    {

    }

    /**
     * Test attribute "age_35_tobacco"
     */
    public function testPropertyAge35Tobacco()
    {

    }

    /**
     * Test attribute "age_36"
     */
    public function testPropertyAge36()
    {

    }

    /**
     * Test attribute "age_36_tobacco"
     */
    public function testPropertyAge36Tobacco()
    {

    }

    /**
     * Test attribute "age_37"
     */
    public function testPropertyAge37()
    {

    }

    /**
     * Test attribute "age_37_tobacco"
     */
    public function testPropertyAge37Tobacco()
    {

    }

    /**
     * Test attribute "age_38"
     */
    public function testPropertyAge38()
    {

    }

    /**
     * Test attribute "age_38_tobacco"
     */
    public function testPropertyAge38Tobacco()
    {

    }

    /**
     * Test attribute "age_39"
     */
    public function testPropertyAge39()
    {

    }

    /**
     * Test attribute "age_39_tobacco"
     */
    public function testPropertyAge39Tobacco()
    {

    }

    /**
     * Test attribute "age_40"
     */
    public function testPropertyAge40()
    {

    }

    /**
     * Test attribute "age_40_tobacco"
     */
    public function testPropertyAge40Tobacco()
    {

    }

    /**
     * Test attribute "age_41"
     */
    public function testPropertyAge41()
    {

    }

    /**
     * Test attribute "age_41_tobacco"
     */
    public function testPropertyAge41Tobacco()
    {

    }

    /**
     * Test attribute "age_42"
     */
    public function testPropertyAge42()
    {

    }

    /**
     * Test attribute "age_42_tobacco"
     */
    public function testPropertyAge42Tobacco()
    {

    }

    /**
     * Test attribute "age_43"
     */
    public function testPropertyAge43()
    {

    }

    /**
     * Test attribute "age_43_tobacco"
     */
    public function testPropertyAge43Tobacco()
    {

    }

    /**
     * Test attribute "age_44"
     */
    public function testPropertyAge44()
    {

    }

    /**
     * Test attribute "age_44_tobacco"
     */
    public function testPropertyAge44Tobacco()
    {

    }

    /**
     * Test attribute "age_45"
     */
    public function testPropertyAge45()
    {

    }

    /**
     * Test attribute "age_45_tobacco"
     */
    public function testPropertyAge45Tobacco()
    {

    }

    /**
     * Test attribute "age_46"
     */
    public function testPropertyAge46()
    {

    }

    /**
     * Test attribute "age_46_tobacco"
     */
    public function testPropertyAge46Tobacco()
    {

    }

    /**
     * Test attribute "age_47"
     */
    public function testPropertyAge47()
    {

    }

    /**
     * Test attribute "age_47_tobacco"
     */
    public function testPropertyAge47Tobacco()
    {

    }

    /**
     * Test attribute "age_48"
     */
    public function testPropertyAge48()
    {

    }

    /**
     * Test attribute "age_48_tobacco"
     */
    public function testPropertyAge48Tobacco()
    {

    }

    /**
     * Test attribute "age_49"
     */
    public function testPropertyAge49()
    {

    }

    /**
     * Test attribute "age_49_tobacco"
     */
    public function testPropertyAge49Tobacco()
    {

    }

    /**
     * Test attribute "age_50"
     */
    public function testPropertyAge50()
    {

    }

    /**
     * Test attribute "age_50_tobacco"
     */
    public function testPropertyAge50Tobacco()
    {

    }

    /**
     * Test attribute "age_51"
     */
    public function testPropertyAge51()
    {

    }

    /**
     * Test attribute "age_51_tobacco"
     */
    public function testPropertyAge51Tobacco()
    {

    }

    /**
     * Test attribute "age_52"
     */
    public function testPropertyAge52()
    {

    }

    /**
     * Test attribute "age_52_tobacco"
     */
    public function testPropertyAge52Tobacco()
    {

    }

    /**
     * Test attribute "age_53"
     */
    public function testPropertyAge53()
    {

    }

    /**
     * Test attribute "age_53_tobacco"
     */
    public function testPropertyAge53Tobacco()
    {

    }

    /**
     * Test attribute "age_54"
     */
    public function testPropertyAge54()
    {

    }

    /**
     * Test attribute "age_54_tobacco"
     */
    public function testPropertyAge54Tobacco()
    {

    }

    /**
     * Test attribute "age_55"
     */
    public function testPropertyAge55()
    {

    }

    /**
     * Test attribute "age_55_tobacco"
     */
    public function testPropertyAge55Tobacco()
    {

    }

    /**
     * Test attribute "age_56"
     */
    public function testPropertyAge56()
    {

    }

    /**
     * Test attribute "age_56_tobacco"
     */
    public function testPropertyAge56Tobacco()
    {

    }

    /**
     * Test attribute "age_57"
     */
    public function testPropertyAge57()
    {

    }

    /**
     * Test attribute "age_57_tobacco"
     */
    public function testPropertyAge57Tobacco()
    {

    }

    /**
     * Test attribute "age_58"
     */
    public function testPropertyAge58()
    {

    }

    /**
     * Test attribute "age_58_tobacco"
     */
    public function testPropertyAge58Tobacco()
    {

    }

    /**
     * Test attribute "age_59"
     */
    public function testPropertyAge59()
    {

    }

    /**
     * Test attribute "age_59_tobacco"
     */
    public function testPropertyAge59Tobacco()
    {

    }

    /**
     * Test attribute "age_60"
     */
    public function testPropertyAge60()
    {

    }

    /**
     * Test attribute "age_60_tobacco"
     */
    public function testPropertyAge60Tobacco()
    {

    }

    /**
     * Test attribute "age_61"
     */
    public function testPropertyAge61()
    {

    }

    /**
     * Test attribute "age_61_tobacco"
     */
    public function testPropertyAge61Tobacco()
    {

    }

    /**
     * Test attribute "age_62"
     */
    public function testPropertyAge62()
    {

    }

    /**
     * Test attribute "age_62_tobacco"
     */
    public function testPropertyAge62Tobacco()
    {

    }

    /**
     * Test attribute "age_63"
     */
    public function testPropertyAge63()
    {

    }

    /**
     * Test attribute "age_63_tobacco"
     */
    public function testPropertyAge63Tobacco()
    {

    }

    /**
     * Test attribute "age_64"
     */
    public function testPropertyAge64()
    {

    }

    /**
     * Test attribute "age_64_tobacco"
     */
    public function testPropertyAge64Tobacco()
    {

    }

    /**
     * Test attribute "age_65"
     */
    public function testPropertyAge65()
    {

    }

    /**
     * Test attribute "age_65_tobacco"
     */
    public function testPropertyAge65Tobacco()
    {

    }

}
